2024-11-30 17:51:48,154:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-30 17:51:48,154:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-30 17:51:48,154:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-30 17:51:48,154:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-11-30 17:53:11,836:INFO:PyCaret ClassificationExperiment
2024-11-30 17:53:11,836:INFO:Logging name: clf-default-name
2024-11-30 17:53:11,836:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-30 17:53:11,838:INFO:version 3.3.2
2024-11-30 17:53:11,838:INFO:Initializing setup()
2024-11-30 17:53:11,838:INFO:self.USI: dd62
2024-11-30 17:53:11,838:INFO:self._variable_keys: {'y_train', 'pipeline', 'fold_generator', 'exp_name_log', 'n_jobs_param', 'y', 'target_param', 'exp_id', 'seed', 'memory', 'idx', 'X', 'gpu_param', 'X_train', 'data', 'html_param', '_ml_usecase', 'X_test', 'log_plots_param', 'logging_param', 'is_multiclass', 'y_test', 'fold_shuffle_param', 'fold_groups_param', 'USI', '_available_plots', 'gpu_n_jobs_param', 'fix_imbalance'}
2024-11-30 17:53:11,838:INFO:Checking environment
2024-11-30 17:53:11,838:INFO:python_version: 3.11.4
2024-11-30 17:53:11,838:INFO:python_build: ('tags/v3.11.4:d2340ef', 'Jun  7 2023 05:45:37')
2024-11-30 17:53:11,838:INFO:machine: AMD64
2024-11-30 17:53:11,838:INFO:platform: Windows-10-10.0.22631-SP0
2024-11-30 17:53:11,840:INFO:Memory: svmem(total=16892026880, available=7640973312, percent=54.8, used=9251053568, free=7640973312)
2024-11-30 17:53:11,840:INFO:Physical Core: 12
2024-11-30 17:53:11,840:INFO:Logical Core: 16
2024-11-30 17:53:11,840:INFO:Checking libraries
2024-11-30 17:53:11,840:INFO:System:
2024-11-30 17:53:11,840:INFO:    python: 3.11.4 (tags/v3.11.4:d2340ef, Jun  7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)]
2024-11-30 17:53:11,840:INFO:executable: C:\Users\ANIL\AppData\Local\Programs\Python\Python311\python.exe
2024-11-30 17:53:11,840:INFO:   machine: Windows-10-10.0.22631-SP0
2024-11-30 17:53:11,840:INFO:PyCaret required dependencies:
2024-11-30 17:53:11,949:INFO:                 pip: 23.1.2
2024-11-30 17:53:11,949:INFO:          setuptools: 65.5.0
2024-11-30 17:53:11,949:INFO:             pycaret: 3.3.2
2024-11-30 17:53:11,949:INFO:             IPython: 8.30.0
2024-11-30 17:53:11,949:INFO:          ipywidgets: 8.1.5
2024-11-30 17:53:11,949:INFO:                tqdm: 4.67.1
2024-11-30 17:53:11,949:INFO:               numpy: 1.26.4
2024-11-30 17:53:11,949:INFO:              pandas: 2.1.4
2024-11-30 17:53:11,949:INFO:              jinja2: 3.1.4
2024-11-30 17:53:11,949:INFO:               scipy: 1.11.4
2024-11-30 17:53:11,949:INFO:              joblib: 1.3.2
2024-11-30 17:53:11,949:INFO:             sklearn: 1.4.2
2024-11-30 17:53:11,949:INFO:                pyod: 2.0.2
2024-11-30 17:53:11,949:INFO:            imblearn: 0.12.4
2024-11-30 17:53:11,949:INFO:   category_encoders: 2.6.4
2024-11-30 17:53:11,949:INFO:            lightgbm: 4.5.0
2024-11-30 17:53:11,949:INFO:               numba: 0.60.0
2024-11-30 17:53:11,949:INFO:            requests: 2.32.3
2024-11-30 17:53:11,949:INFO:          matplotlib: 3.7.5
2024-11-30 17:53:11,949:INFO:          scikitplot: 0.3.7
2024-11-30 17:53:11,949:INFO:         yellowbrick: 1.5
2024-11-30 17:53:11,949:INFO:              plotly: 5.24.1
2024-11-30 17:53:11,949:INFO:    plotly-resampler: Not installed
2024-11-30 17:53:11,949:INFO:             kaleido: 0.2.1
2024-11-30 17:53:11,949:INFO:           schemdraw: 0.15
2024-11-30 17:53:11,949:INFO:         statsmodels: 0.14.4
2024-11-30 17:53:11,949:INFO:              sktime: 0.26.0
2024-11-30 17:53:11,949:INFO:               tbats: 1.1.3
2024-11-30 17:53:11,949:INFO:            pmdarima: 2.0.4
2024-11-30 17:53:11,949:INFO:              psutil: 6.1.0
2024-11-30 17:53:11,949:INFO:          markupsafe: 3.0.2
2024-11-30 17:53:11,949:INFO:             pickle5: Not installed
2024-11-30 17:53:11,949:INFO:         cloudpickle: 3.1.0
2024-11-30 17:53:11,949:INFO:         deprecation: 2.1.0
2024-11-30 17:53:11,949:INFO:              xxhash: 3.5.0
2024-11-30 17:53:11,949:INFO:           wurlitzer: Not installed
2024-11-30 17:53:11,949:INFO:PyCaret optional dependencies:
2024-11-30 17:53:11,964:INFO:                shap: Not installed
2024-11-30 17:53:11,964:INFO:           interpret: Not installed
2024-11-30 17:53:11,964:INFO:                umap: Not installed
2024-11-30 17:53:11,964:INFO:     ydata_profiling: Not installed
2024-11-30 17:53:11,964:INFO:  explainerdashboard: Not installed
2024-11-30 17:53:11,964:INFO:             autoviz: Not installed
2024-11-30 17:53:11,964:INFO:           fairlearn: Not installed
2024-11-30 17:53:11,964:INFO:          deepchecks: Not installed
2024-11-30 17:53:11,964:INFO:             xgboost: Not installed
2024-11-30 17:53:11,964:INFO:            catboost: Not installed
2024-11-30 17:53:11,964:INFO:              kmodes: Not installed
2024-11-30 17:53:11,964:INFO:             mlxtend: Not installed
2024-11-30 17:53:11,964:INFO:       statsforecast: Not installed
2024-11-30 17:53:11,964:INFO:        tune_sklearn: Not installed
2024-11-30 17:53:11,964:INFO:                 ray: Not installed
2024-11-30 17:53:11,964:INFO:            hyperopt: Not installed
2024-11-30 17:53:11,964:INFO:              optuna: Not installed
2024-11-30 17:53:11,964:INFO:               skopt: Not installed
2024-11-30 17:53:11,964:INFO:              mlflow: Not installed
2024-11-30 17:53:11,964:INFO:              gradio: Not installed
2024-11-30 17:53:11,964:INFO:             fastapi: Not installed
2024-11-30 17:53:11,964:INFO:             uvicorn: Not installed
2024-11-30 17:53:11,964:INFO:              m2cgen: Not installed
2024-11-30 17:53:11,964:INFO:           evidently: Not installed
2024-11-30 17:53:11,964:INFO:               fugue: Not installed
2024-11-30 17:53:11,964:INFO:           streamlit: Not installed
2024-11-30 17:53:11,964:INFO:             prophet: Not installed
2024-11-30 17:53:11,964:INFO:None
2024-11-30 17:53:11,964:INFO:Set up data.
2024-11-30 17:53:11,985:INFO:Set up folding strategy.
2024-11-30 17:53:11,985:INFO:Set up train/test split.
2024-11-30 17:53:11,986:INFO:Set up index.
2024-11-30 17:53:11,986:INFO:Assigning column types.
2024-11-30 17:53:11,996:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-30 17:53:12,063:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-30 17:53:12,080:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-30 17:53:12,150:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 17:53:12,150:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 17:53:12,228:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-30 17:53:12,228:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-30 17:53:12,276:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 17:53:12,276:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 17:53:12,276:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-30 17:53:12,339:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-30 17:53:12,386:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 17:53:12,386:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 17:53:12,470:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-30 17:53:12,514:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 17:53:12,514:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 17:53:12,514:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-30 17:53:12,638:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 17:53:12,638:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 17:53:12,772:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 17:53:12,772:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 17:53:12,791:INFO:Preparing preprocessing pipeline...
2024-11-30 17:53:12,791:INFO:Set up simple imputation.
2024-11-30 17:53:12,791:INFO:Set up removing outliers.
2024-11-30 17:53:12,791:INFO:Set up feature normalization.
2024-11-30 17:53:12,791:INFO:Set up feature selection.
2024-11-30 17:53:12,903:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 17:53:12,916:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 17:53:13,839:INFO:Finished creating preprocessing pipeline.
2024-11-30 17:53:13,859:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ANIL\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False)
2024-11-30 17:53:13,859:INFO:Creating final display dataframe.
2024-11-30 17:53:15,094:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target           Outcome
2                   Target type            Binary
3           Original data shape          (768, 9)
4        Transformed data shape          (737, 2)
5   Transformed train set shape          (583, 2)
6    Transformed test set shape          (154, 2)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12              Remove outliers              True
13           Outliers threshold              0.05
14                    Normalize              True
15             Normalize method            zscore
16            Feature selection              True
17     Feature selection method           classic
18  Feature selection estimator          lightgbm
19  Number of features selected               0.2
20               Fold Generator   StratifiedKFold
21                  Fold Number                10
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  clf-default-name
26                          USI              dd62
2024-11-30 17:53:15,419:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 17:53:15,420:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 17:53:15,586:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 17:53:15,589:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 17:53:15,591:INFO:setup() successfully completed in 3.82s...............
2024-11-30 17:53:35,293:INFO:Initializing create_model()
2024-11-30 17:53:35,293:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027EF17D0D90>, estimator=svm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-30 17:53:35,293:INFO:Checking exceptions
2024-11-30 17:53:35,375:INFO:Importing libraries
2024-11-30 17:53:35,376:INFO:Copying training dataset
2024-11-30 17:53:35,383:INFO:Defining folds
2024-11-30 17:53:35,383:INFO:Declaring metric variables
2024-11-30 17:53:35,385:INFO:Importing untrained model
2024-11-30 17:53:35,385:INFO:SVM - Linear Kernel Imported successfully
2024-11-30 17:53:35,399:INFO:Starting cross validation
2024-11-30 17:53:35,418:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-30 17:53:40,610:WARNING:C:\Users\ANIL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-30 17:53:40,630:INFO:Calculating mean and std
2024-11-30 17:53:40,630:INFO:Creating metrics dataframe
2024-11-30 17:53:40,637:INFO:Finalizing model
2024-11-30 17:53:40,872:INFO:[LightGBM] [Info] Number of positive: 197, number of negative: 386
2024-11-30 17:53:40,872:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000197 seconds.
2024-11-30 17:53:40,872:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-11-30 17:53:40,872:INFO:[LightGBM] [Info] Total Bins 639
2024-11-30 17:53:40,872:INFO:[LightGBM] [Info] Number of data points in the train set: 583, number of used features: 8
2024-11-30 17:53:40,872:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.337907 -> initscore=-0.672634
2024-11-30 17:53:40,872:INFO:[LightGBM] [Info] Start training from score -0.672634
2024-11-30 17:53:40,872:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:40,872:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:40,887:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:40,890:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:40,890:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:40,890:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:40,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:40,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:40,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:40,903:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:40,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:40,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:40,919:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:40,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:40,943:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:40,943:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:40,951:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:40,959:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:40,959:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:40,959:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:40,979:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:40,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:40,989:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:40,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,001:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,006:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,010:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,010:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,010:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,022:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,022:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,022:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,022:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,038:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,038:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,038:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,085:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,085:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,091:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,091:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,101:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,101:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,101:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,101:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,116:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,116:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,116:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,132:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,137:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,140:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,140:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,148:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,164:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,179:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,179:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,179:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,191:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,195:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,195:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,195:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,211:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,211:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,211:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,227:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,227:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,227:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,227:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,242:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,242:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,242:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,258:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,258:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,258:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,258:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,274:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,274:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,274:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,289:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,291:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,291:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,291:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,305:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,308:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,323:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,323:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 17:53:41,363:INFO:Uploading results into container
2024-11-30 17:53:41,364:INFO:Uploading model into container now
2024-11-30 17:53:41,383:INFO:_master_model_container: 1
2024-11-30 17:53:41,383:INFO:_display_container: 2
2024-11-30 17:53:41,383:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-30 17:53:41,383:INFO:create_model() successfully completed......................................
2024-11-30 17:53:41,506:INFO:Initializing evaluate_model()
2024-11-30 17:53:41,540:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027EF17D0D90>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-11-30 17:53:41,587:INFO:Initializing plot_model()
2024-11-30 17:53:41,587:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027EF17D0D90>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-11-30 17:53:41,587:INFO:Checking exceptions
2024-11-30 17:53:41,592:INFO:Preloading libraries
2024-11-30 17:53:41,592:INFO:Copying training dataset
2024-11-30 17:53:41,592:INFO:Plot type: pipeline
2024-11-30 17:53:41,981:INFO:Visual Rendered Successfully
2024-11-30 17:53:42,097:INFO:plot_model() successfully completed......................................
2024-11-30 17:55:31,083:INFO:PyCaret ClassificationExperiment
2024-11-30 17:55:31,084:INFO:Logging name: clf-default-name
2024-11-30 17:55:31,084:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-30 17:55:31,085:INFO:version 3.3.2
2024-11-30 17:55:31,085:INFO:Initializing setup()
2024-11-30 17:55:31,085:INFO:self.USI: 37d2
2024-11-30 17:55:31,085:INFO:self._variable_keys: {'y_train', 'pipeline', 'fold_generator', 'exp_name_log', 'n_jobs_param', 'y', 'target_param', 'exp_id', 'seed', 'memory', 'idx', 'X', 'gpu_param', 'X_train', 'data', 'html_param', '_ml_usecase', 'X_test', 'log_plots_param', 'logging_param', 'is_multiclass', 'y_test', 'fold_shuffle_param', 'fold_groups_param', 'USI', '_available_plots', 'gpu_n_jobs_param', 'fix_imbalance'}
2024-11-30 17:55:31,085:INFO:Checking environment
2024-11-30 17:55:31,085:INFO:python_version: 3.11.4
2024-11-30 17:55:31,085:INFO:python_build: ('tags/v3.11.4:d2340ef', 'Jun  7 2023 05:45:37')
2024-11-30 17:55:31,085:INFO:machine: AMD64
2024-11-30 17:55:31,085:INFO:platform: Windows-10-10.0.22631-SP0
2024-11-30 17:55:31,091:INFO:Memory: svmem(total=16892026880, available=6070788096, percent=64.1, used=10821238784, free=6070788096)
2024-11-30 17:55:31,091:INFO:Physical Core: 12
2024-11-30 17:55:31,091:INFO:Logical Core: 16
2024-11-30 17:55:31,091:INFO:Checking libraries
2024-11-30 17:55:31,091:INFO:System:
2024-11-30 17:55:31,091:INFO:    python: 3.11.4 (tags/v3.11.4:d2340ef, Jun  7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)]
2024-11-30 17:55:31,091:INFO:executable: C:\Users\ANIL\AppData\Local\Programs\Python\Python311\python.exe
2024-11-30 17:55:31,091:INFO:   machine: Windows-10-10.0.22631-SP0
2024-11-30 17:55:31,092:INFO:PyCaret required dependencies:
2024-11-30 17:55:31,092:INFO:                 pip: 23.1.2
2024-11-30 17:55:31,092:INFO:          setuptools: 65.5.0
2024-11-30 17:55:31,092:INFO:             pycaret: 3.3.2
2024-11-30 17:55:31,092:INFO:             IPython: 8.30.0
2024-11-30 17:55:31,092:INFO:          ipywidgets: 8.1.5
2024-11-30 17:55:31,092:INFO:                tqdm: 4.67.1
2024-11-30 17:55:31,092:INFO:               numpy: 1.26.4
2024-11-30 17:55:31,092:INFO:              pandas: 2.1.4
2024-11-30 17:55:31,092:INFO:              jinja2: 3.1.4
2024-11-30 17:55:31,092:INFO:               scipy: 1.11.4
2024-11-30 17:55:31,092:INFO:              joblib: 1.3.2
2024-11-30 17:55:31,092:INFO:             sklearn: 1.4.2
2024-11-30 17:55:31,092:INFO:                pyod: 2.0.2
2024-11-30 17:55:31,092:INFO:            imblearn: 0.12.4
2024-11-30 17:55:31,092:INFO:   category_encoders: 2.6.4
2024-11-30 17:55:31,093:INFO:            lightgbm: 4.5.0
2024-11-30 17:55:31,093:INFO:               numba: 0.60.0
2024-11-30 17:55:31,093:INFO:            requests: 2.32.3
2024-11-30 17:55:31,093:INFO:          matplotlib: 3.7.5
2024-11-30 17:55:31,093:INFO:          scikitplot: 0.3.7
2024-11-30 17:55:31,093:INFO:         yellowbrick: 1.5
2024-11-30 17:55:31,093:INFO:              plotly: 5.24.1
2024-11-30 17:55:31,093:INFO:    plotly-resampler: Not installed
2024-11-30 17:55:31,093:INFO:             kaleido: 0.2.1
2024-11-30 17:55:31,093:INFO:           schemdraw: 0.15
2024-11-30 17:55:31,093:INFO:         statsmodels: 0.14.4
2024-11-30 17:55:31,093:INFO:              sktime: 0.26.0
2024-11-30 17:55:31,093:INFO:               tbats: 1.1.3
2024-11-30 17:55:31,093:INFO:            pmdarima: 2.0.4
2024-11-30 17:55:31,093:INFO:              psutil: 6.1.0
2024-11-30 17:55:31,093:INFO:          markupsafe: 3.0.2
2024-11-30 17:55:31,093:INFO:             pickle5: Not installed
2024-11-30 17:55:31,093:INFO:         cloudpickle: 3.1.0
2024-11-30 17:55:31,093:INFO:         deprecation: 2.1.0
2024-11-30 17:55:31,094:INFO:              xxhash: 3.5.0
2024-11-30 17:55:31,094:INFO:           wurlitzer: Not installed
2024-11-30 17:55:31,094:INFO:PyCaret optional dependencies:
2024-11-30 17:55:31,094:INFO:                shap: Not installed
2024-11-30 17:55:31,094:INFO:           interpret: Not installed
2024-11-30 17:55:31,094:INFO:                umap: Not installed
2024-11-30 17:55:31,094:INFO:     ydata_profiling: Not installed
2024-11-30 17:55:31,094:INFO:  explainerdashboard: Not installed
2024-11-30 17:55:31,094:INFO:             autoviz: Not installed
2024-11-30 17:55:31,094:INFO:           fairlearn: Not installed
2024-11-30 17:55:31,094:INFO:          deepchecks: Not installed
2024-11-30 17:55:31,094:INFO:             xgboost: Not installed
2024-11-30 17:55:31,094:INFO:            catboost: Not installed
2024-11-30 17:55:31,094:INFO:              kmodes: Not installed
2024-11-30 17:55:31,094:INFO:             mlxtend: Not installed
2024-11-30 17:55:31,094:INFO:       statsforecast: Not installed
2024-11-30 17:55:31,094:INFO:        tune_sklearn: Not installed
2024-11-30 17:55:31,094:INFO:                 ray: Not installed
2024-11-30 17:55:31,094:INFO:            hyperopt: Not installed
2024-11-30 17:55:31,094:INFO:              optuna: Not installed
2024-11-30 17:55:31,095:INFO:               skopt: Not installed
2024-11-30 17:55:31,095:INFO:              mlflow: Not installed
2024-11-30 17:55:31,095:INFO:              gradio: Not installed
2024-11-30 17:55:31,095:INFO:             fastapi: Not installed
2024-11-30 17:55:31,095:INFO:             uvicorn: Not installed
2024-11-30 17:55:31,095:INFO:              m2cgen: Not installed
2024-11-30 17:55:31,095:INFO:           evidently: Not installed
2024-11-30 17:55:31,095:INFO:               fugue: Not installed
2024-11-30 17:55:31,095:INFO:           streamlit: Not installed
2024-11-30 17:55:31,095:INFO:             prophet: Not installed
2024-11-30 17:55:31,095:INFO:None
2024-11-30 17:55:31,095:INFO:Set up data.
2024-11-30 17:55:31,099:INFO:Set up folding strategy.
2024-11-30 17:55:31,099:INFO:Set up train/test split.
2024-11-30 17:55:31,106:INFO:Set up index.
2024-11-30 17:55:31,107:INFO:Assigning column types.
2024-11-30 17:55:31,113:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-30 17:55:31,177:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-30 17:55:31,177:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-30 17:55:31,234:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 17:55:31,234:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 17:55:31,304:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-30 17:55:31,304:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-30 17:55:31,343:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 17:55:31,343:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 17:55:31,343:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-30 17:55:31,406:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-30 17:55:31,454:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 17:55:31,454:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 17:55:31,534:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-30 17:55:31,580:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 17:55:31,580:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 17:55:31,580:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-30 17:55:31,717:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 17:55:31,717:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 17:55:31,841:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 17:55:31,841:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 17:55:31,842:INFO:Preparing preprocessing pipeline...
2024-11-30 17:55:31,845:INFO:Set up simple imputation.
2024-11-30 17:55:31,845:INFO:Set up feature normalization.
2024-11-30 17:55:31,879:INFO:Finished creating preprocessing pipeline.
2024-11-30 17:55:31,879:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ANIL\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('normalize',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=StandardScaler(copy=True,
                                                               with_mean=True,
                                                               with_std=True)))],
         verbose=False)
2024-11-30 17:55:31,887:INFO:Creating final display dataframe.
2024-11-30 17:55:32,022:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target           Outcome
2                   Target type            Binary
3           Original data shape          (768, 9)
4        Transformed data shape          (768, 9)
5   Transformed train set shape          (614, 9)
6    Transformed test set shape          (154, 9)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12                    Normalize              True
13             Normalize method            zscore
14               Fold Generator   StratifiedKFold
15                  Fold Number                10
16                     CPU Jobs                -1
17                      Use GPU             False
18               Log Experiment             False
19              Experiment Name  clf-default-name
20                          USI              37d2
2024-11-30 17:55:32,160:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 17:55:32,160:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 17:55:32,273:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 17:55:32,273:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 17:55:32,273:INFO:setup() successfully completed in 1.2s...............
2024-11-30 17:55:55,562:INFO:Initializing create_model()
2024-11-30 17:55:55,562:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027EF1C7CF90>, estimator=svm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-30 17:55:55,562:INFO:Checking exceptions
2024-11-30 17:55:55,600:INFO:Importing libraries
2024-11-30 17:55:55,601:INFO:Copying training dataset
2024-11-30 17:55:55,605:INFO:Defining folds
2024-11-30 17:55:55,605:INFO:Declaring metric variables
2024-11-30 17:55:55,605:INFO:Importing untrained model
2024-11-30 17:55:55,616:INFO:SVM - Linear Kernel Imported successfully
2024-11-30 17:55:55,627:INFO:Starting cross validation
2024-11-30 17:55:55,629:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-30 17:56:01,630:INFO:Calculating mean and std
2024-11-30 17:56:01,630:INFO:Creating metrics dataframe
2024-11-30 17:56:01,639:INFO:Finalizing model
2024-11-30 17:56:01,691:INFO:Uploading results into container
2024-11-30 17:56:01,695:INFO:Uploading model into container now
2024-11-30 17:56:01,716:INFO:_master_model_container: 1
2024-11-30 17:56:01,717:INFO:_display_container: 2
2024-11-30 17:56:01,717:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-30 17:56:01,717:INFO:create_model() successfully completed......................................
2024-11-30 17:56:01,839:INFO:Initializing predict_model()
2024-11-30 17:56:01,839:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027EF1C7CF90>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027EF18AB740>)
2024-11-30 17:56:01,839:INFO:Checking exceptions
2024-11-30 17:56:01,839:INFO:Preloading libraries
2024-11-30 17:56:47,498:INFO:Initializing create_model()
2024-11-30 17:56:47,498:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027EF1C7CF90>, estimator=svm, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-30 17:56:47,501:INFO:Checking exceptions
2024-11-30 17:56:47,524:INFO:Importing libraries
2024-11-30 17:56:47,524:INFO:Copying training dataset
2024-11-30 17:56:47,529:INFO:Defining folds
2024-11-30 17:56:47,530:INFO:Declaring metric variables
2024-11-30 17:56:47,534:INFO:Importing untrained model
2024-11-30 17:56:47,538:INFO:SVM - Linear Kernel Imported successfully
2024-11-30 17:56:47,542:INFO:Starting cross validation
2024-11-30 17:56:47,549:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-30 17:56:47,733:INFO:Calculating mean and std
2024-11-30 17:56:47,733:INFO:Creating metrics dataframe
2024-11-30 17:56:47,735:INFO:Finalizing model
2024-11-30 17:56:47,771:INFO:Uploading results into container
2024-11-30 17:56:47,771:INFO:Uploading model into container now
2024-11-30 17:56:47,787:INFO:_master_model_container: 2
2024-11-30 17:56:47,787:INFO:_display_container: 4
2024-11-30 17:56:47,787:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-30 17:56:47,787:INFO:create_model() successfully completed......................................
2024-11-30 17:56:47,937:INFO:Initializing predict_model()
2024-11-30 17:56:47,937:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027EF1C7CF90>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000027EADA6C360>)
2024-11-30 17:56:47,937:INFO:Checking exceptions
2024-11-30 17:56:47,937:INFO:Preloading libraries
2024-11-30 18:01:10,936:INFO:PyCaret ClassificationExperiment
2024-11-30 18:01:10,936:INFO:Logging name: clf-default-name
2024-11-30 18:01:10,936:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-11-30 18:01:10,937:INFO:version 3.3.2
2024-11-30 18:01:10,937:INFO:Initializing setup()
2024-11-30 18:01:10,937:INFO:self.USI: a4e9
2024-11-30 18:01:10,937:INFO:self._variable_keys: {'y_train', 'pipeline', 'fold_generator', 'exp_name_log', 'n_jobs_param', 'y', 'target_param', 'exp_id', 'seed', 'memory', 'idx', 'X', 'gpu_param', 'X_train', 'data', 'html_param', '_ml_usecase', 'X_test', 'log_plots_param', 'logging_param', 'is_multiclass', 'y_test', 'fold_shuffle_param', 'fold_groups_param', 'USI', '_available_plots', 'gpu_n_jobs_param', 'fix_imbalance'}
2024-11-30 18:01:10,937:INFO:Checking environment
2024-11-30 18:01:10,937:INFO:python_version: 3.11.4
2024-11-30 18:01:10,937:INFO:python_build: ('tags/v3.11.4:d2340ef', 'Jun  7 2023 05:45:37')
2024-11-30 18:01:10,938:INFO:machine: AMD64
2024-11-30 18:01:10,938:INFO:platform: Windows-10-10.0.22631-SP0
2024-11-30 18:01:10,940:INFO:Memory: svmem(total=16892026880, available=6237052928, percent=63.1, used=10654973952, free=6237052928)
2024-11-30 18:01:10,940:INFO:Physical Core: 12
2024-11-30 18:01:10,940:INFO:Logical Core: 16
2024-11-30 18:01:10,940:INFO:Checking libraries
2024-11-30 18:01:10,940:INFO:System:
2024-11-30 18:01:10,940:INFO:    python: 3.11.4 (tags/v3.11.4:d2340ef, Jun  7 2023, 05:45:37) [MSC v.1934 64 bit (AMD64)]
2024-11-30 18:01:10,940:INFO:executable: C:\Users\ANIL\AppData\Local\Programs\Python\Python311\python.exe
2024-11-30 18:01:10,940:INFO:   machine: Windows-10-10.0.22631-SP0
2024-11-30 18:01:10,940:INFO:PyCaret required dependencies:
2024-11-30 18:01:10,940:INFO:                 pip: 23.1.2
2024-11-30 18:01:10,940:INFO:          setuptools: 65.5.0
2024-11-30 18:01:10,940:INFO:             pycaret: 3.3.2
2024-11-30 18:01:10,940:INFO:             IPython: 8.30.0
2024-11-30 18:01:10,940:INFO:          ipywidgets: 8.1.5
2024-11-30 18:01:10,940:INFO:                tqdm: 4.67.1
2024-11-30 18:01:10,940:INFO:               numpy: 1.26.4
2024-11-30 18:01:10,940:INFO:              pandas: 2.1.4
2024-11-30 18:01:10,940:INFO:              jinja2: 3.1.4
2024-11-30 18:01:10,940:INFO:               scipy: 1.11.4
2024-11-30 18:01:10,940:INFO:              joblib: 1.3.2
2024-11-30 18:01:10,940:INFO:             sklearn: 1.4.2
2024-11-30 18:01:10,940:INFO:                pyod: 2.0.2
2024-11-30 18:01:10,940:INFO:            imblearn: 0.12.4
2024-11-30 18:01:10,940:INFO:   category_encoders: 2.6.4
2024-11-30 18:01:10,940:INFO:            lightgbm: 4.5.0
2024-11-30 18:01:10,940:INFO:               numba: 0.60.0
2024-11-30 18:01:10,940:INFO:            requests: 2.32.3
2024-11-30 18:01:10,940:INFO:          matplotlib: 3.7.5
2024-11-30 18:01:10,940:INFO:          scikitplot: 0.3.7
2024-11-30 18:01:10,940:INFO:         yellowbrick: 1.5
2024-11-30 18:01:10,940:INFO:              plotly: 5.24.1
2024-11-30 18:01:10,940:INFO:    plotly-resampler: Not installed
2024-11-30 18:01:10,940:INFO:             kaleido: 0.2.1
2024-11-30 18:01:10,940:INFO:           schemdraw: 0.15
2024-11-30 18:01:10,940:INFO:         statsmodels: 0.14.4
2024-11-30 18:01:10,940:INFO:              sktime: 0.26.0
2024-11-30 18:01:10,940:INFO:               tbats: 1.1.3
2024-11-30 18:01:10,940:INFO:            pmdarima: 2.0.4
2024-11-30 18:01:10,940:INFO:              psutil: 6.1.0
2024-11-30 18:01:10,940:INFO:          markupsafe: 3.0.2
2024-11-30 18:01:10,940:INFO:             pickle5: Not installed
2024-11-30 18:01:10,940:INFO:         cloudpickle: 3.1.0
2024-11-30 18:01:10,940:INFO:         deprecation: 2.1.0
2024-11-30 18:01:10,940:INFO:              xxhash: 3.5.0
2024-11-30 18:01:10,940:INFO:           wurlitzer: Not installed
2024-11-30 18:01:10,940:INFO:PyCaret optional dependencies:
2024-11-30 18:01:10,940:INFO:                shap: Not installed
2024-11-30 18:01:10,940:INFO:           interpret: Not installed
2024-11-30 18:01:10,940:INFO:                umap: Not installed
2024-11-30 18:01:10,940:INFO:     ydata_profiling: Not installed
2024-11-30 18:01:10,940:INFO:  explainerdashboard: Not installed
2024-11-30 18:01:10,940:INFO:             autoviz: Not installed
2024-11-30 18:01:10,940:INFO:           fairlearn: Not installed
2024-11-30 18:01:10,940:INFO:          deepchecks: Not installed
2024-11-30 18:01:10,940:INFO:             xgboost: Not installed
2024-11-30 18:01:10,940:INFO:            catboost: Not installed
2024-11-30 18:01:10,940:INFO:              kmodes: Not installed
2024-11-30 18:01:10,940:INFO:             mlxtend: Not installed
2024-11-30 18:01:10,940:INFO:       statsforecast: Not installed
2024-11-30 18:01:10,940:INFO:        tune_sklearn: Not installed
2024-11-30 18:01:10,948:INFO:                 ray: Not installed
2024-11-30 18:01:10,948:INFO:            hyperopt: Not installed
2024-11-30 18:01:10,948:INFO:              optuna: Not installed
2024-11-30 18:01:10,948:INFO:               skopt: Not installed
2024-11-30 18:01:10,948:INFO:              mlflow: Not installed
2024-11-30 18:01:10,948:INFO:              gradio: Not installed
2024-11-30 18:01:10,948:INFO:             fastapi: Not installed
2024-11-30 18:01:10,948:INFO:             uvicorn: Not installed
2024-11-30 18:01:10,948:INFO:              m2cgen: Not installed
2024-11-30 18:01:10,948:INFO:           evidently: Not installed
2024-11-30 18:01:10,948:INFO:               fugue: Not installed
2024-11-30 18:01:10,948:INFO:           streamlit: Not installed
2024-11-30 18:01:10,948:INFO:             prophet: Not installed
2024-11-30 18:01:10,948:INFO:None
2024-11-30 18:01:10,948:INFO:Set up data.
2024-11-30 18:01:10,955:INFO:Set up folding strategy.
2024-11-30 18:01:10,955:INFO:Set up train/test split.
2024-11-30 18:01:10,955:INFO:Set up index.
2024-11-30 18:01:10,955:INFO:Assigning column types.
2024-11-30 18:01:10,969:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-11-30 18:01:11,032:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-30 18:01:11,032:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-30 18:01:11,069:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 18:01:11,069:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 18:01:11,148:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-11-30 18:01:11,150:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-30 18:01:11,193:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 18:01:11,193:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 18:01:11,193:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-11-30 18:01:11,256:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-30 18:01:11,304:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 18:01:11,304:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 18:01:11,383:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-11-30 18:01:11,415:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 18:01:11,415:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 18:01:11,415:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-11-30 18:01:11,538:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 18:01:11,538:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 18:01:11,663:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 18:01:11,663:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 18:01:11,673:INFO:Preparing preprocessing pipeline...
2024-11-30 18:01:11,674:INFO:Set up simple imputation.
2024-11-30 18:01:11,674:INFO:Set up removing outliers.
2024-11-30 18:01:11,674:INFO:Set up feature normalization.
2024-11-30 18:01:11,674:INFO:Set up feature selection.
2024-11-30 18:01:11,793:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 18:01:11,793:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 18:01:11,961:INFO:Finished creating preprocessing pipeline.
2024-11-30 18:01:11,981:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\ANIL\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Pregnancies', 'Glucose',
                                             'BloodPressure', 'SkinThickness',
                                             'Insulin', 'BMI',
                                             'DiabetesPedigreeFunction',
                                             'Age'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False)
2024-11-30 18:01:11,981:INFO:Creating final display dataframe.
2024-11-30 18:01:12,272:INFO:Setup _display_container:                     Description             Value
0                    Session id                42
1                        Target           Outcome
2                   Target type            Binary
3           Original data shape          (768, 9)
4        Transformed data shape          (737, 2)
5   Transformed train set shape          (583, 2)
6    Transformed test set shape          (154, 2)
7              Numeric features                 8
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12              Remove outliers              True
13           Outliers threshold              0.05
14                    Normalize              True
15             Normalize method            zscore
16            Feature selection              True
17     Feature selection method           classic
18  Feature selection estimator          lightgbm
19  Number of features selected               0.2
20               Fold Generator   StratifiedKFold
21                  Fold Number                10
22                     CPU Jobs                -1
23                      Use GPU             False
24               Log Experiment             False
25              Experiment Name  clf-default-name
26                          USI              a4e9
2024-11-30 18:01:12,429:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 18:01:12,432:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 18:01:12,556:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 18:01:12,556:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-11-30 18:01:12,556:INFO:setup() successfully completed in 1.63s...............
2024-11-30 18:01:23,614:INFO:Initializing compare_models()
2024-11-30 18:01:23,614:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027EF7B1F110>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000027EF7B1F110>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-11-30 18:01:23,615:INFO:Checking exceptions
2024-11-30 18:01:23,615:INFO:Preparing display monitor
2024-11-30 18:01:23,662:INFO:Initializing Logistic Regression
2024-11-30 18:01:23,663:INFO:Total runtime is 2.5232632954915363e-05 minutes
2024-11-30 18:01:23,667:INFO:SubProcess create_model() called ==================================
2024-11-30 18:01:23,667:INFO:Initializing create_model()
2024-11-30 18:01:23,667:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027EF7B1F110>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027EF7957910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-30 18:01:23,667:INFO:Checking exceptions
2024-11-30 18:01:23,667:INFO:Importing libraries
2024-11-30 18:01:23,667:INFO:Copying training dataset
2024-11-30 18:01:23,679:INFO:Defining folds
2024-11-30 18:01:23,679:INFO:Declaring metric variables
2024-11-30 18:01:23,682:INFO:Importing untrained model
2024-11-30 18:01:23,682:INFO:Logistic Regression Imported successfully
2024-11-30 18:01:23,701:INFO:Starting cross validation
2024-11-30 18:01:23,715:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-30 18:01:27,160:INFO:Calculating mean and std
2024-11-30 18:01:27,160:INFO:Creating metrics dataframe
2024-11-30 18:01:27,160:INFO:Uploading results into container
2024-11-30 18:01:27,160:INFO:Uploading model into container now
2024-11-30 18:01:27,160:INFO:_master_model_container: 1
2024-11-30 18:01:27,160:INFO:_display_container: 2
2024-11-30 18:01:27,170:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-11-30 18:01:27,170:INFO:create_model() successfully completed......................................
2024-11-30 18:01:27,307:INFO:SubProcess create_model() end ==================================
2024-11-30 18:01:27,307:INFO:Creating metrics dataframe
2024-11-30 18:01:27,329:INFO:Initializing K Neighbors Classifier
2024-11-30 18:01:27,329:INFO:Total runtime is 0.06112229824066162 minutes
2024-11-30 18:01:27,337:INFO:SubProcess create_model() called ==================================
2024-11-30 18:01:27,337:INFO:Initializing create_model()
2024-11-30 18:01:27,337:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027EF7B1F110>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027EF7957910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-30 18:01:27,337:INFO:Checking exceptions
2024-11-30 18:01:27,337:INFO:Importing libraries
2024-11-30 18:01:27,337:INFO:Copying training dataset
2024-11-30 18:01:27,345:INFO:Defining folds
2024-11-30 18:01:27,356:INFO:Declaring metric variables
2024-11-30 18:01:27,356:INFO:Importing untrained model
2024-11-30 18:01:27,372:INFO:K Neighbors Classifier Imported successfully
2024-11-30 18:01:27,386:INFO:Starting cross validation
2024-11-30 18:01:27,389:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-30 18:01:30,532:INFO:Calculating mean and std
2024-11-30 18:01:30,532:INFO:Creating metrics dataframe
2024-11-30 18:01:30,536:INFO:Uploading results into container
2024-11-30 18:01:30,536:INFO:Uploading model into container now
2024-11-30 18:01:30,536:INFO:_master_model_container: 2
2024-11-30 18:01:30,536:INFO:_display_container: 2
2024-11-30 18:01:30,536:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-11-30 18:01:30,536:INFO:create_model() successfully completed......................................
2024-11-30 18:01:30,672:INFO:SubProcess create_model() end ==================================
2024-11-30 18:01:30,672:INFO:Creating metrics dataframe
2024-11-30 18:01:30,683:INFO:Initializing Naive Bayes
2024-11-30 18:01:30,683:INFO:Total runtime is 0.11702826023101806 minutes
2024-11-30 18:01:30,703:INFO:SubProcess create_model() called ==================================
2024-11-30 18:01:30,703:INFO:Initializing create_model()
2024-11-30 18:01:30,703:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027EF7B1F110>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027EF7957910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-30 18:01:30,703:INFO:Checking exceptions
2024-11-30 18:01:30,703:INFO:Importing libraries
2024-11-30 18:01:30,703:INFO:Copying training dataset
2024-11-30 18:01:30,715:INFO:Defining folds
2024-11-30 18:01:30,715:INFO:Declaring metric variables
2024-11-30 18:01:30,724:INFO:Importing untrained model
2024-11-30 18:01:30,724:INFO:Naive Bayes Imported successfully
2024-11-30 18:01:30,738:INFO:Starting cross validation
2024-11-30 18:01:30,754:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-30 18:01:34,152:INFO:Calculating mean and std
2024-11-30 18:01:34,152:INFO:Creating metrics dataframe
2024-11-30 18:01:34,160:INFO:Uploading results into container
2024-11-30 18:01:34,162:INFO:Uploading model into container now
2024-11-30 18:01:34,162:INFO:_master_model_container: 3
2024-11-30 18:01:34,162:INFO:_display_container: 2
2024-11-30 18:01:34,162:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-30 18:01:34,162:INFO:create_model() successfully completed......................................
2024-11-30 18:01:34,311:INFO:SubProcess create_model() end ==================================
2024-11-30 18:01:34,311:INFO:Creating metrics dataframe
2024-11-30 18:01:34,327:INFO:Initializing Decision Tree Classifier
2024-11-30 18:01:34,327:INFO:Total runtime is 0.17775025367736816 minutes
2024-11-30 18:01:34,349:INFO:SubProcess create_model() called ==================================
2024-11-30 18:01:34,351:INFO:Initializing create_model()
2024-11-30 18:01:34,351:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027EF7B1F110>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027EF7957910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-30 18:01:34,351:INFO:Checking exceptions
2024-11-30 18:01:34,351:INFO:Importing libraries
2024-11-30 18:01:34,352:INFO:Copying training dataset
2024-11-30 18:01:34,361:INFO:Defining folds
2024-11-30 18:01:34,361:INFO:Declaring metric variables
2024-11-30 18:01:34,366:INFO:Importing untrained model
2024-11-30 18:01:34,379:INFO:Decision Tree Classifier Imported successfully
2024-11-30 18:01:34,397:INFO:Starting cross validation
2024-11-30 18:01:34,409:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-30 18:01:37,711:INFO:Calculating mean and std
2024-11-30 18:01:37,714:INFO:Creating metrics dataframe
2024-11-30 18:01:37,718:INFO:Uploading results into container
2024-11-30 18:01:37,718:INFO:Uploading model into container now
2024-11-30 18:01:37,720:INFO:_master_model_container: 4
2024-11-30 18:01:37,720:INFO:_display_container: 2
2024-11-30 18:01:37,720:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2024-11-30 18:01:37,720:INFO:create_model() successfully completed......................................
2024-11-30 18:01:37,891:INFO:SubProcess create_model() end ==================================
2024-11-30 18:01:37,891:INFO:Creating metrics dataframe
2024-11-30 18:01:37,908:INFO:Initializing SVM - Linear Kernel
2024-11-30 18:01:37,908:INFO:Total runtime is 0.23743350903193156 minutes
2024-11-30 18:01:37,917:INFO:SubProcess create_model() called ==================================
2024-11-30 18:01:37,917:INFO:Initializing create_model()
2024-11-30 18:01:37,917:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027EF7B1F110>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027EF7957910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-30 18:01:37,917:INFO:Checking exceptions
2024-11-30 18:01:37,917:INFO:Importing libraries
2024-11-30 18:01:37,918:INFO:Copying training dataset
2024-11-30 18:01:37,928:INFO:Defining folds
2024-11-30 18:01:37,928:INFO:Declaring metric variables
2024-11-30 18:01:37,942:INFO:Importing untrained model
2024-11-30 18:01:37,942:INFO:SVM - Linear Kernel Imported successfully
2024-11-30 18:01:37,969:INFO:Starting cross validation
2024-11-30 18:01:37,973:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-30 18:01:41,179:WARNING:C:\Users\ANIL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-30 18:01:41,477:INFO:Calculating mean and std
2024-11-30 18:01:41,524:INFO:Creating metrics dataframe
2024-11-30 18:01:41,529:INFO:Uploading results into container
2024-11-30 18:01:41,531:INFO:Uploading model into container now
2024-11-30 18:01:41,531:INFO:_master_model_container: 5
2024-11-30 18:01:41,531:INFO:_display_container: 2
2024-11-30 18:01:41,531:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-11-30 18:01:41,531:INFO:create_model() successfully completed......................................
2024-11-30 18:01:41,680:INFO:SubProcess create_model() end ==================================
2024-11-30 18:01:41,680:INFO:Creating metrics dataframe
2024-11-30 18:01:41,696:INFO:Initializing Ridge Classifier
2024-11-30 18:01:41,696:INFO:Total runtime is 0.30057397683461506 minutes
2024-11-30 18:01:41,705:INFO:SubProcess create_model() called ==================================
2024-11-30 18:01:41,711:INFO:Initializing create_model()
2024-11-30 18:01:41,711:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027EF7B1F110>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027EF7957910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-30 18:01:41,711:INFO:Checking exceptions
2024-11-30 18:01:41,711:INFO:Importing libraries
2024-11-30 18:01:41,711:INFO:Copying training dataset
2024-11-30 18:01:41,726:INFO:Defining folds
2024-11-30 18:01:41,726:INFO:Declaring metric variables
2024-11-30 18:01:41,739:INFO:Importing untrained model
2024-11-30 18:01:41,751:INFO:Ridge Classifier Imported successfully
2024-11-30 18:01:41,767:INFO:Starting cross validation
2024-11-30 18:01:41,771:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-30 18:01:45,220:INFO:Calculating mean and std
2024-11-30 18:01:45,220:INFO:Creating metrics dataframe
2024-11-30 18:01:45,229:INFO:Uploading results into container
2024-11-30 18:01:45,230:INFO:Uploading model into container now
2024-11-30 18:01:45,231:INFO:_master_model_container: 6
2024-11-30 18:01:45,231:INFO:_display_container: 2
2024-11-30 18:01:45,232:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2024-11-30 18:01:45,232:INFO:create_model() successfully completed......................................
2024-11-30 18:01:45,379:INFO:SubProcess create_model() end ==================================
2024-11-30 18:01:45,379:INFO:Creating metrics dataframe
2024-11-30 18:01:45,403:INFO:Initializing Random Forest Classifier
2024-11-30 18:01:45,403:INFO:Total runtime is 0.36235784689585365 minutes
2024-11-30 18:01:45,412:INFO:SubProcess create_model() called ==================================
2024-11-30 18:01:45,412:INFO:Initializing create_model()
2024-11-30 18:01:45,413:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027EF7B1F110>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027EF7957910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-30 18:01:45,413:INFO:Checking exceptions
2024-11-30 18:01:45,413:INFO:Importing libraries
2024-11-30 18:01:45,413:INFO:Copying training dataset
2024-11-30 18:01:45,418:INFO:Defining folds
2024-11-30 18:01:45,426:INFO:Declaring metric variables
2024-11-30 18:01:45,431:INFO:Importing untrained model
2024-11-30 18:01:45,442:INFO:Random Forest Classifier Imported successfully
2024-11-30 18:01:45,458:INFO:Starting cross validation
2024-11-30 18:01:45,464:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-30 18:01:49,778:INFO:Calculating mean and std
2024-11-30 18:01:49,778:INFO:Creating metrics dataframe
2024-11-30 18:01:49,785:INFO:Uploading results into container
2024-11-30 18:01:49,785:INFO:Uploading model into container now
2024-11-30 18:01:49,785:INFO:_master_model_container: 7
2024-11-30 18:01:49,785:INFO:_display_container: 2
2024-11-30 18:01:49,785:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2024-11-30 18:01:49,785:INFO:create_model() successfully completed......................................
2024-11-30 18:01:49,941:INFO:SubProcess create_model() end ==================================
2024-11-30 18:01:49,941:INFO:Creating metrics dataframe
2024-11-30 18:01:49,957:INFO:Initializing Quadratic Discriminant Analysis
2024-11-30 18:01:49,957:INFO:Total runtime is 0.4382506728172302 minutes
2024-11-30 18:01:49,977:INFO:SubProcess create_model() called ==================================
2024-11-30 18:01:49,978:INFO:Initializing create_model()
2024-11-30 18:01:49,978:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027EF7B1F110>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027EF7957910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-30 18:01:49,978:INFO:Checking exceptions
2024-11-30 18:01:49,978:INFO:Importing libraries
2024-11-30 18:01:49,978:INFO:Copying training dataset
2024-11-30 18:01:49,988:INFO:Defining folds
2024-11-30 18:01:49,988:INFO:Declaring metric variables
2024-11-30 18:01:49,995:INFO:Importing untrained model
2024-11-30 18:01:50,011:INFO:Quadratic Discriminant Analysis Imported successfully
2024-11-30 18:01:50,028:INFO:Starting cross validation
2024-11-30 18:01:50,029:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-30 18:01:53,287:INFO:Calculating mean and std
2024-11-30 18:01:53,287:INFO:Creating metrics dataframe
2024-11-30 18:01:53,293:INFO:Uploading results into container
2024-11-30 18:01:53,293:INFO:Uploading model into container now
2024-11-30 18:01:53,293:INFO:_master_model_container: 8
2024-11-30 18:01:53,293:INFO:_display_container: 2
2024-11-30 18:01:53,293:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-11-30 18:01:53,293:INFO:create_model() successfully completed......................................
2024-11-30 18:01:53,451:INFO:SubProcess create_model() end ==================================
2024-11-30 18:01:53,451:INFO:Creating metrics dataframe
2024-11-30 18:01:53,482:INFO:Initializing Ada Boost Classifier
2024-11-30 18:01:53,482:INFO:Total runtime is 0.4969992677370707 minutes
2024-11-30 18:01:53,482:INFO:SubProcess create_model() called ==================================
2024-11-30 18:01:53,482:INFO:Initializing create_model()
2024-11-30 18:01:53,482:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027EF7B1F110>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027EF7957910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-30 18:01:53,482:INFO:Checking exceptions
2024-11-30 18:01:53,482:INFO:Importing libraries
2024-11-30 18:01:53,482:INFO:Copying training dataset
2024-11-30 18:01:53,497:INFO:Defining folds
2024-11-30 18:01:53,497:INFO:Declaring metric variables
2024-11-30 18:01:53,497:INFO:Importing untrained model
2024-11-30 18:01:53,520:INFO:Ada Boost Classifier Imported successfully
2024-11-30 18:01:53,529:INFO:Starting cross validation
2024-11-30 18:01:53,545:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-30 18:01:56,679:WARNING:C:\Users\ANIL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-30 18:01:56,679:WARNING:C:\Users\ANIL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-30 18:01:56,688:WARNING:C:\Users\ANIL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-30 18:01:56,704:WARNING:C:\Users\ANIL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-30 18:01:56,711:WARNING:C:\Users\ANIL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-30 18:01:56,716:WARNING:C:\Users\ANIL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-30 18:01:56,721:WARNING:C:\Users\ANIL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-30 18:01:56,730:WARNING:C:\Users\ANIL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-30 18:01:56,745:WARNING:C:\Users\ANIL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-30 18:01:56,788:WARNING:C:\Users\ANIL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-11-30 18:01:57,108:INFO:Calculating mean and std
2024-11-30 18:01:57,112:INFO:Creating metrics dataframe
2024-11-30 18:01:57,112:INFO:Uploading results into container
2024-11-30 18:01:57,112:INFO:Uploading model into container now
2024-11-30 18:01:57,112:INFO:_master_model_container: 9
2024-11-30 18:01:57,112:INFO:_display_container: 2
2024-11-30 18:01:57,112:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2024-11-30 18:01:57,120:INFO:create_model() successfully completed......................................
2024-11-30 18:01:57,278:INFO:SubProcess create_model() end ==================================
2024-11-30 18:01:57,278:INFO:Creating metrics dataframe
2024-11-30 18:01:57,303:INFO:Initializing Gradient Boosting Classifier
2024-11-30 18:01:57,303:INFO:Total runtime is 0.5606873671213786 minutes
2024-11-30 18:01:57,312:INFO:SubProcess create_model() called ==================================
2024-11-30 18:01:57,312:INFO:Initializing create_model()
2024-11-30 18:01:57,312:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027EF7B1F110>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027EF7957910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-30 18:01:57,312:INFO:Checking exceptions
2024-11-30 18:01:57,312:INFO:Importing libraries
2024-11-30 18:01:57,312:INFO:Copying training dataset
2024-11-30 18:01:57,320:INFO:Defining folds
2024-11-30 18:01:57,320:INFO:Declaring metric variables
2024-11-30 18:01:57,328:INFO:Importing untrained model
2024-11-30 18:01:57,336:INFO:Gradient Boosting Classifier Imported successfully
2024-11-30 18:01:57,353:INFO:Starting cross validation
2024-11-30 18:01:57,361:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-30 18:02:01,149:INFO:Calculating mean and std
2024-11-30 18:02:01,149:INFO:Creating metrics dataframe
2024-11-30 18:02:01,153:INFO:Uploading results into container
2024-11-30 18:02:01,153:INFO:Uploading model into container now
2024-11-30 18:02:01,153:INFO:_master_model_container: 10
2024-11-30 18:02:01,153:INFO:_display_container: 2
2024-11-30 18:02:01,153:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-11-30 18:02:01,153:INFO:create_model() successfully completed......................................
2024-11-30 18:02:01,326:INFO:SubProcess create_model() end ==================================
2024-11-30 18:02:01,328:INFO:Creating metrics dataframe
2024-11-30 18:02:01,346:INFO:Initializing Linear Discriminant Analysis
2024-11-30 18:02:01,346:INFO:Total runtime is 0.6280748844146729 minutes
2024-11-30 18:02:01,358:INFO:SubProcess create_model() called ==================================
2024-11-30 18:02:01,358:INFO:Initializing create_model()
2024-11-30 18:02:01,358:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027EF7B1F110>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027EF7957910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-30 18:02:01,358:INFO:Checking exceptions
2024-11-30 18:02:01,358:INFO:Importing libraries
2024-11-30 18:02:01,358:INFO:Copying training dataset
2024-11-30 18:02:01,362:INFO:Defining folds
2024-11-30 18:02:01,362:INFO:Declaring metric variables
2024-11-30 18:02:01,379:INFO:Importing untrained model
2024-11-30 18:02:01,379:INFO:Linear Discriminant Analysis Imported successfully
2024-11-30 18:02:01,397:INFO:Starting cross validation
2024-11-30 18:02:01,411:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-30 18:02:04,630:INFO:Calculating mean and std
2024-11-30 18:02:04,633:INFO:Creating metrics dataframe
2024-11-30 18:02:04,637:INFO:Uploading results into container
2024-11-30 18:02:04,639:INFO:Uploading model into container now
2024-11-30 18:02:04,640:INFO:_master_model_container: 11
2024-11-30 18:02:04,640:INFO:_display_container: 2
2024-11-30 18:02:04,641:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-11-30 18:02:04,641:INFO:create_model() successfully completed......................................
2024-11-30 18:02:04,800:INFO:SubProcess create_model() end ==================================
2024-11-30 18:02:04,800:INFO:Creating metrics dataframe
2024-11-30 18:02:04,818:INFO:Initializing Extra Trees Classifier
2024-11-30 18:02:04,818:INFO:Total runtime is 0.6859370191891988 minutes
2024-11-30 18:02:04,828:INFO:SubProcess create_model() called ==================================
2024-11-30 18:02:04,828:INFO:Initializing create_model()
2024-11-30 18:02:04,828:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027EF7B1F110>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027EF7957910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-30 18:02:04,828:INFO:Checking exceptions
2024-11-30 18:02:04,828:INFO:Importing libraries
2024-11-30 18:02:04,828:INFO:Copying training dataset
2024-11-30 18:02:04,840:INFO:Defining folds
2024-11-30 18:02:04,846:INFO:Declaring metric variables
2024-11-30 18:02:04,854:INFO:Importing untrained model
2024-11-30 18:02:04,861:INFO:Extra Trees Classifier Imported successfully
2024-11-30 18:02:04,870:INFO:Starting cross validation
2024-11-30 18:02:04,886:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-30 18:02:08,838:INFO:Calculating mean and std
2024-11-30 18:02:08,843:INFO:Creating metrics dataframe
2024-11-30 18:02:08,846:INFO:Uploading results into container
2024-11-30 18:02:08,846:INFO:Uploading model into container now
2024-11-30 18:02:08,846:INFO:_master_model_container: 12
2024-11-30 18:02:08,846:INFO:_display_container: 2
2024-11-30 18:02:08,846:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2024-11-30 18:02:08,846:INFO:create_model() successfully completed......................................
2024-11-30 18:02:09,013:INFO:SubProcess create_model() end ==================================
2024-11-30 18:02:09,013:INFO:Creating metrics dataframe
2024-11-30 18:02:09,037:INFO:Initializing Light Gradient Boosting Machine
2024-11-30 18:02:09,037:INFO:Total runtime is 0.7562604467074077 minutes
2024-11-30 18:02:09,045:INFO:SubProcess create_model() called ==================================
2024-11-30 18:02:09,045:INFO:Initializing create_model()
2024-11-30 18:02:09,045:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027EF7B1F110>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027EF7957910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-30 18:02:09,045:INFO:Checking exceptions
2024-11-30 18:02:09,045:INFO:Importing libraries
2024-11-30 18:02:09,045:INFO:Copying training dataset
2024-11-30 18:02:09,062:INFO:Defining folds
2024-11-30 18:02:09,062:INFO:Declaring metric variables
2024-11-30 18:02:09,069:INFO:Importing untrained model
2024-11-30 18:02:09,078:INFO:Light Gradient Boosting Machine Imported successfully
2024-11-30 18:02:09,078:INFO:Starting cross validation
2024-11-30 18:02:09,093:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-30 18:02:15,723:INFO:Calculating mean and std
2024-11-30 18:02:15,727:INFO:Creating metrics dataframe
2024-11-30 18:02:15,731:INFO:Uploading results into container
2024-11-30 18:02:15,732:INFO:Uploading model into container now
2024-11-30 18:02:15,734:INFO:_master_model_container: 13
2024-11-30 18:02:15,734:INFO:_display_container: 2
2024-11-30 18:02:15,734:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-11-30 18:02:15,734:INFO:create_model() successfully completed......................................
2024-11-30 18:02:15,897:INFO:SubProcess create_model() end ==================================
2024-11-30 18:02:15,897:INFO:Creating metrics dataframe
2024-11-30 18:02:15,918:INFO:Initializing Dummy Classifier
2024-11-30 18:02:15,918:INFO:Total runtime is 0.8709383845329285 minutes
2024-11-30 18:02:15,921:INFO:SubProcess create_model() called ==================================
2024-11-30 18:02:15,921:INFO:Initializing create_model()
2024-11-30 18:02:15,928:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027EF7B1F110>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027EF7957910>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-30 18:02:15,928:INFO:Checking exceptions
2024-11-30 18:02:15,928:INFO:Importing libraries
2024-11-30 18:02:15,928:INFO:Copying training dataset
2024-11-30 18:02:15,938:INFO:Defining folds
2024-11-30 18:02:15,938:INFO:Declaring metric variables
2024-11-30 18:02:15,947:INFO:Importing untrained model
2024-11-30 18:02:15,947:INFO:Dummy Classifier Imported successfully
2024-11-30 18:02:15,964:INFO:Starting cross validation
2024-11-30 18:02:15,980:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-11-30 18:02:19,064:WARNING:C:\Users\ANIL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-30 18:02:19,095:WARNING:C:\Users\ANIL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-30 18:02:19,106:WARNING:C:\Users\ANIL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-30 18:02:19,116:WARNING:C:\Users\ANIL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-30 18:02:19,126:WARNING:C:\Users\ANIL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-30 18:02:19,138:WARNING:C:\Users\ANIL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-30 18:02:19,146:WARNING:C:\Users\ANIL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-30 18:02:19,177:WARNING:C:\Users\ANIL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-30 18:02:19,187:WARNING:C:\Users\ANIL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-30 18:02:19,202:WARNING:C:\Users\ANIL\AppData\Local\Programs\Python\Python311\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-11-30 18:02:19,228:INFO:Calculating mean and std
2024-11-30 18:02:19,228:INFO:Creating metrics dataframe
2024-11-30 18:02:19,234:INFO:Uploading results into container
2024-11-30 18:02:19,234:INFO:Uploading model into container now
2024-11-30 18:02:19,234:INFO:_master_model_container: 14
2024-11-30 18:02:19,234:INFO:_display_container: 2
2024-11-30 18:02:19,234:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2024-11-30 18:02:19,234:INFO:create_model() successfully completed......................................
2024-11-30 18:02:19,400:INFO:SubProcess create_model() end ==================================
2024-11-30 18:02:19,400:INFO:Creating metrics dataframe
2024-11-30 18:02:19,466:WARNING:C:\Users\ANIL\AppData\Local\Programs\Python\Python311\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-11-30 18:02:19,490:INFO:Initializing create_model()
2024-11-30 18:02:19,491:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000027EF7B1F110>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-11-30 18:02:19,491:INFO:Checking exceptions
2024-11-30 18:02:19,491:INFO:Importing libraries
2024-11-30 18:02:19,491:INFO:Copying training dataset
2024-11-30 18:02:19,499:INFO:Defining folds
2024-11-30 18:02:19,499:INFO:Declaring metric variables
2024-11-30 18:02:19,499:INFO:Importing untrained model
2024-11-30 18:02:19,499:INFO:Declaring custom model
2024-11-30 18:02:19,499:INFO:Naive Bayes Imported successfully
2024-11-30 18:02:19,514:INFO:Cross validation set to False
2024-11-30 18:02:19,514:INFO:Fitting Model
2024-11-30 18:02:19,854:INFO:[LightGBM] [Info] Number of positive: 197, number of negative: 386
2024-11-30 18:02:19,860:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000297 seconds.
2024-11-30 18:02:19,860:INFO:You can set `force_col_wise=true` to remove the overhead.
2024-11-30 18:02:19,860:INFO:[LightGBM] [Info] Total Bins 639
2024-11-30 18:02:19,860:INFO:[LightGBM] [Info] Number of data points in the train set: 583, number of used features: 8
2024-11-30 18:02:19,860:INFO:[LightGBM] [Info] [binary:BoostFromScore]: pavg=0.337907 -> initscore=-0.672634
2024-11-30 18:02:19,860:INFO:[LightGBM] [Info] Start training from score -0.672634
2024-11-30 18:02:19,866:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:19,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:19,877:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:19,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:19,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:19,893:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:19,893:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:19,893:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:19,908:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:19,908:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:19,908:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:19,924:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:19,924:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:19,924:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:19,939:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:19,939:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:19,939:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:19,955:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:19,955:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:19,967:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:19,971:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:19,971:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:19,971:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:19,987:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:19,987:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:19,987:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,018:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,018:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,018:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,042:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,042:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,050:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,054:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,059:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,067:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,075:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,075:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,075:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,091:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,091:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,091:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,107:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,107:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,107:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,121:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,130:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,137:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,137:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,147:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,156:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,156:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,156:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,171:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,173:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,173:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,188:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,190:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,190:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,190:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,204:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,210:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,210:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,220:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,220:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,226:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,235:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,237:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,243:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,243:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,254:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,259:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,259:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,271:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,276:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,276:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,287:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,292:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,300:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,304:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,309:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,321:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,325:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,336:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,358:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,358:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,407:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2024-11-30 18:02:20,423:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-30 18:02:20,423:INFO:create_model() successfully completed......................................
2024-11-30 18:02:20,652:INFO:_master_model_container: 14
2024-11-30 18:02:20,652:INFO:_display_container: 2
2024-11-30 18:02:20,652:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-11-30 18:02:20,652:INFO:compare_models() successfully completed......................................
